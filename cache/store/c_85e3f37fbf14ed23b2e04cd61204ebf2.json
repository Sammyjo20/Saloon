{
    "name": "Sammyjo20\\Saloon\\Http\\SaloonConnector",
    "line": 22,
    "short_desc": null,
    "long_desc": null,
    "hint": null,
    "tags": [],
    "namespace": "Sammyjo20\\Saloon\\Http",
    "file": ".\/src\/Http\/SaloonConnector.php",
    "relative_file": null,
    "hash": "bb0b913666605baa6c3f1152a4d6527a9cb59942",
    "parent": null,
    "modifiers": 16,
    "is_trait": false,
    "is_interface": false,
    "is_read_only": false,
    "aliases": {
        "PromiseInterface": "GuzzleHttp\\Promise\\PromiseInterface",
        "MockClient": "Sammyjo20\\Saloon\\Clients\\MockClient",
        "CollectsData": "Sammyjo20\\Saloon\\Traits\\CollectsData",
        "MocksRequests": "Sammyjo20\\Saloon\\Traits\\MocksRequests",
        "CollectsConfig": "Sammyjo20\\Saloon\\Traits\\CollectsConfig",
        "CollectsHeaders": "Sammyjo20\\Saloon\\Traits\\CollectsHeaders",
        "GuessesRequests": "Sammyjo20\\Saloon\\Traits\\GuessesRequests",
        "CollectsHandlers": "Sammyjo20\\Saloon\\Traits\\CollectsHandlers",
        "HasCustomResponses": "Sammyjo20\\Saloon\\Traits\\HasCustomResponses",
        "CollectsQueryParams": "Sammyjo20\\Saloon\\Traits\\CollectsQueryParams",
        "CollectsInterceptors": "Sammyjo20\\Saloon\\Traits\\CollectsInterceptors",
        "AuthenticatesRequests": "Sammyjo20\\Saloon\\Traits\\AuthenticatesRequests",
        "ClassNotFoundException": "Sammyjo20\\Saloon\\Exceptions\\ClassNotFoundException",
        "SaloonConnectorInterface": "Sammyjo20\\Saloon\\Interfaces\\SaloonConnectorInterface",
        "SaloonInvalidRequestException": "Sammyjo20\\Saloon\\Exceptions\\SaloonInvalidRequestException",
        "SaloonConnectorMethodNotFoundException": "Sammyjo20\\Saloon\\Exceptions\\SaloonConnectorMethodNotFoundException"
    },
    "errors": [],
    "interfaces": {
        "Sammyjo20\\Saloon\\Interfaces\\SaloonConnectorInterface": "Sammyjo20\\Saloon\\Interfaces\\SaloonConnectorInterface"
    },
    "traits": {
        "Sammyjo20\\Saloon\\Traits\\CollectsHeaders": "Sammyjo20\\Saloon\\Traits\\CollectsHeaders",
        "Sammyjo20\\Saloon\\Traits\\CollectsData": "Sammyjo20\\Saloon\\Traits\\CollectsData",
        "Sammyjo20\\Saloon\\Traits\\CollectsQueryParams": "Sammyjo20\\Saloon\\Traits\\CollectsQueryParams",
        "Sammyjo20\\Saloon\\Traits\\CollectsConfig": "Sammyjo20\\Saloon\\Traits\\CollectsConfig",
        "Sammyjo20\\Saloon\\Traits\\CollectsHandlers": "Sammyjo20\\Saloon\\Traits\\CollectsHandlers",
        "Sammyjo20\\Saloon\\Traits\\CollectsInterceptors": "Sammyjo20\\Saloon\\Traits\\CollectsInterceptors",
        "Sammyjo20\\Saloon\\Traits\\AuthenticatesRequests": "Sammyjo20\\Saloon\\Traits\\AuthenticatesRequests",
        "Sammyjo20\\Saloon\\Traits\\HasCustomResponses": "Sammyjo20\\Saloon\\Traits\\HasCustomResponses",
        "Sammyjo20\\Saloon\\Traits\\MocksRequests": "Sammyjo20\\Saloon\\Traits\\MocksRequests",
        "Sammyjo20\\Saloon\\Traits\\GuessesRequests": "Sammyjo20\\Saloon\\Traits\\GuessesRequests"
    },
    "properties": {
        "requests": {
            "name": "requests",
            "line": 41,
            "short_desc": "Register Saloon requests that will become methods on the connector.",
            "long_desc": "For example, GetUserRequest would become $this->getUserRequest(...$args)",
            "hint": [
                [
                    "array",
                    false
                ],
                [
                    "string",
                    true
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "modifiers": 2,
            "default": {
                "nodeType": "Expr_Array",
                "attributes": {
                    "startLine": 41,
                    "endLine": 41,
                    "kind": 2
                },
                "items": []
            },
            "errors": [],
            "is_read_only": false,
            "is_write_only": false
        }
    },
    "methods": {
        "boot": {
            "name": "boot",
            "line": 50,
            "short_desc": "Define anything that should be added to any requests\nwith this connector before the request is sent.",
            "long_desc": "",
            "hint": [
                [
                    "void",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "see": [],
            "modifiers": 1,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "request": {
                    "name": "request",
                    "line": 50,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Sammyjo20\\Saloon\\Http\\SaloonRequest",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": 0,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false,
                    "is_read_only": false
                }
            }
        },
        "request": {
            "name": "request",
            "line": 61,
            "short_desc": "Prepare a new request by providing it the current instance of the connector.",
            "long_desc": "",
            "hint": [
                [
                    "\\Sammyjo20\\Saloon\\Http\\SaloonRequest",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "see": [],
            "modifiers": 1,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "request": {
                    "name": "request",
                    "line": 61,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Sammyjo20\\Saloon\\Http\\SaloonRequest",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": 0,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false,
                    "is_read_only": false
                }
            }
        },
        "send": {
            "name": "send",
            "line": 73,
            "short_desc": "Send a Saloon request with the current instance of the connector.",
            "long_desc": "",
            "hint": [
                [
                    "\\Sammyjo20\\Saloon\\Http\\SaloonResponse",
                    false
                ]
            ],
            "hint_desc": null,
            "tags": [],
            "see": [],
            "modifiers": 1,
            "is_by_ref": "",
            "exceptions": [
                [
                    "\\ReflectionException",
                    ""
                ],
                [
                    "\\GuzzleHttp\\Exception\\GuzzleException",
                    ""
                ],
                [
                    "\\Sammyjo20\\Saloon\\Exceptions\\SaloonException",
                    ""
                ]
            ],
            "errors": [],
            "parameters": {
                "request": {
                    "name": "request",
                    "line": 73,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Sammyjo20\\Saloon\\Http\\SaloonRequest",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": 0,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false,
                    "is_read_only": false
                },
                "mockClient": {
                    "name": "mockClient",
                    "line": 73,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Sammyjo20\\Saloon\\Clients\\MockClient",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": 0,
                    "default": "null",
                    "variadic": false,
                    "is_by_ref": false,
                    "is_read_only": false
                }
            }
        },
        "sendAsync": {
            "name": "sendAsync",
            "line": 88,
            "short_desc": "Send an asynchronous Saloon request with the current instance of the connector.",
            "long_desc": "",
            "hint": [
                [
                    "\\GuzzleHttp\\Promise\\PromiseInterface",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "see": [],
            "modifiers": 1,
            "is_by_ref": "",
            "exceptions": [
                [
                    "\\GuzzleHttp\\Exception\\GuzzleException",
                    ""
                ],
                [
                    "\\ReflectionException",
                    ""
                ],
                [
                    "\\Sammyjo20\\Saloon\\Exceptions\\SaloonException",
                    ""
                ]
            ],
            "errors": [],
            "parameters": {
                "request": {
                    "name": "request",
                    "line": 88,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Sammyjo20\\Saloon\\Http\\SaloonRequest",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": 0,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false,
                    "is_read_only": false
                },
                "mockClient": {
                    "name": "mockClient",
                    "line": 88,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "\\Sammyjo20\\Saloon\\Clients\\MockClient",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": 0,
                    "default": "null",
                    "variadic": false,
                    "is_by_ref": false,
                    "is_read_only": false
                }
            }
        },
        "__call": {
            "name": "__call",
            "line": 104,
            "short_desc": "Dynamically proxy other methods to try and call a requests.",
            "long_desc": "",
            "hint": [
                [
                    "\\Sammyjo20\\Saloon\\Http\\AnonymousRequestCollection",
                    false
                ],
                [
                    "\\Sammyjo20\\Saloon\\Http\\SaloonRequest",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "see": [],
            "modifiers": 1,
            "is_by_ref": "",
            "exceptions": [
                [
                    "\\Sammyjo20\\Saloon\\Exceptions\\ClassNotFoundException",
                    ""
                ],
                [
                    "\\Sammyjo20\\Saloon\\Exceptions\\SaloonConnectorMethodNotFoundException",
                    ""
                ],
                [
                    "\\Sammyjo20\\Saloon\\Exceptions\\SaloonInvalidRequestException",
                    ""
                ],
                [
                    "\\ReflectionException",
                    ""
                ]
            ],
            "errors": [],
            "parameters": {
                "method": {
                    "name": "method",
                    "line": 104,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [],
                    "tags": [],
                    "modifiers": 0,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false,
                    "is_read_only": false
                },
                "arguments": {
                    "name": "arguments",
                    "line": 104,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [],
                    "tags": [],
                    "modifiers": 0,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false,
                    "is_read_only": false
                }
            }
        },
        "__callStatic": {
            "name": "__callStatic",
            "line": 120,
            "short_desc": "Dynamically proxy other methods to try and call a requests.",
            "long_desc": "",
            "hint": [
                [
                    "\\Sammyjo20\\Saloon\\Http\\SaloonRequest",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "see": [],
            "modifiers": 9,
            "is_by_ref": "",
            "exceptions": [
                [
                    "\\Sammyjo20\\Saloon\\Exceptions\\ClassNotFoundException",
                    ""
                ],
                [
                    "\\Sammyjo20\\Saloon\\Exceptions\\SaloonInvalidRequestException",
                    ""
                ],
                [
                    "\\Sammyjo20\\Saloon\\Exceptions\\SaloonConnectorMethodNotFoundException",
                    ""
                ],
                [
                    "\\ReflectionException",
                    ""
                ]
            ],
            "errors": [],
            "parameters": {
                "method": {
                    "name": "method",
                    "line": 120,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [],
                    "tags": [],
                    "modifiers": 0,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false,
                    "is_read_only": false
                },
                "arguments": {
                    "name": "arguments",
                    "line": 120,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [],
                    "tags": [],
                    "modifiers": 0,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false,
                    "is_read_only": false
                }
            }
        },
        "make": {
            "name": "make",
            "line": 131,
            "short_desc": "Instantiate a new class with the arguments.",
            "long_desc": "",
            "hint": [
                [
                    "Sammyjo20\\Saloon\\Http\\SaloonConnector",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "see": [],
            "modifiers": 9,
            "is_by_ref": "",
            "exceptions": [],
            "errors": [],
            "parameters": {
                "arguments": {
                    "name": "arguments",
                    "line": 131,
                    "short_desc": "",
                    "long_desc": null,
                    "hint": [
                        [
                            "mixed",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": 0,
                    "default": null,
                    "variadic": true,
                    "is_by_ref": false,
                    "is_read_only": false
                }
            }
        }
    },
    "constants": []
}